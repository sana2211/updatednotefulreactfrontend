{"ast":null,"code":"import _slicedToArray from \"/Users/Mustaqeem/Documents/noteful-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/Mustaqeem/Documents/noteful-client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Mustaqeem/Documents/noteful-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Mustaqeem/Documents/noteful-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Mustaqeem/Documents/noteful-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Mustaqeem/Documents/noteful-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Mustaqeem/Documents/noteful-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Mustaqeem/Documents/noteful-client/src/App/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport dummyStore from '../dummy-store';\nimport { getNotesForFolder, findNote, findFolder } from '../notes-helpers';\nimport './App.css';\nimport Config from '../config';\nvar API = Config.API_ENDPOINT;\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      notes: [],\n      folders: []\n    };\n\n    _this.handleAddFolder = function (folder) {\n      _this.setState({\n        folders: [].concat(_toConsumableArray(_this.state.folders), [folder])\n      });\n    };\n\n    _this.handleAddNote = function (note) {\n      _this.setState({\n        notes: [].concat(_toConsumableArray(_this.state.notes), [note])\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // fake date loading from API call\n      //setTimeout(() => this.setState(dummyStore), 600)\n      Promise.all([fetch(\"\".concat(API, \"/notes\")), fetch(\"\".concat(API, \"/folders\"))]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            notesRes = _ref2[0],\n            foldersRes = _ref2[1];\n\n        if (!notesRes.ok) return notesRes.json().then(function (e) {\n          return Promise.reject(e);\n        });\n        if (!foldersRes.ok) return foldersRes.json().then(function (e) {\n          return Promise.reject(e);\n        });\n        return Promise.all([notesRes.json(), foldersRes.json()]);\n      }).then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            notes = _ref4[0],\n            folders = _ref4[1];\n\n        folders.map(function (folder) {\n          return _this2.handleAddFolder(folder);\n        });\n        notes.map(function (note) {\n          return _this2.handleAddNote(note);\n        });\n      }).catch(function (error) {\n        console.error({\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"renderNavRoutes\",\n    value: function renderNavRoutes() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          notes = _this$state.notes,\n          folders = _this$state.folders;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(function (path) {\n        return /*#__PURE__*/React.createElement(Route, {\n          exact: true,\n          key: path,\n          path: path,\n          render: function render(routeProps) {\n            return /*#__PURE__*/React.createElement(NoteListNav, Object.assign({\n              folders: folders,\n              notes: notes\n            }, routeProps, {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 15\n              }\n            }));\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }\n        });\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/note/:noteId\",\n        render: function render(routeProps) {\n          var noteId = routeProps.match.params.noteId;\n          var note = findNote(notes, noteId) || {};\n          var folder = findFolder(folders, note.folderId);\n          return /*#__PURE__*/React.createElement(NotePageNav, Object.assign({}, routeProps, {\n            folder: folder,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/add-folder\",\n        component: NotePageNav,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/add-note\",\n        component: NotePageNav,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"renderMainRoutes\",\n    value: function renderMainRoutes() {\n      var _this4 = this;\n\n      var _this$state2 = this.state,\n          notes = _this$state2.notes,\n          folders = _this$state2.folders;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, ['/', '/folder/:folderId'].map(function (path) {\n        return /*#__PURE__*/React.createElement(Route, {\n          exact: true,\n          key: path,\n          path: path,\n          render: function render(routeProps) {\n            var folderId = routeProps.match.params.folderId;\n            var notesForFolder = getNotesForFolder(notes, folderId);\n            return /*#__PURE__*/React.createElement(NoteListMain, Object.assign({}, routeProps, {\n              notes: notesForFolder,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }\n            }));\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }\n        });\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/note/:noteId\",\n        render: function render(routeProps) {\n          var noteId = routeProps.match.params.noteId;\n          var note = findNote(notes, noteId);\n          return /*#__PURE__*/React.createElement(NotePageMain, Object.assign({}, routeProps, {\n            note: note,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/add-folder\",\n        component: AddFolder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/add-note\",\n        render: function render(routeProps) {\n          return /*#__PURE__*/React.createElement(AddNote, Object.assign({}, routeProps, {\n            folders: folders,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"App__nav\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }\n      }, this.renderNavRoutes()), /*#__PURE__*/React.createElement(\"header\", {\n        className: \"App__header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }, \"Noteful\"), ' ', /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: \"check-double\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"main\", {\n        className: \"App__main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }, this.renderMainRoutes()));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Mustaqeem/Documents/noteful-client/src/App/App.js"],"names":["React","Component","Route","Link","FontAwesomeIcon","NoteListNav","NotePageNav","NoteListMain","NotePageMain","AddFolder","AddNote","dummyStore","getNotesForFolder","findNote","findFolder","Config","API","API_ENDPOINT","App","state","notes","folders","handleAddFolder","folder","setState","handleAddNote","note","Promise","all","fetch","then","notesRes","foldersRes","ok","json","e","reject","map","catch","error","console","path","routeProps","noteId","match","params","folderId","notesForFolder","renderNavRoutes","renderMainRoutes"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,kBAA5B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,iBAAT,EAA4BC,QAA5B,EAAsCC,UAAtC,QAAwD,kBAAxD;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,IAAMC,GAAG,GAAGD,MAAM,CAACE,YAAnB;;IAEMC,G;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE;AAFH,K;;UAKRC,e,GAAkB,UAAAC,MAAM,EAAI;AAC1B,YAAKC,QAAL,CAAc;AACZH,QAAAA,OAAO,+BAAM,MAAKF,KAAL,CAAWE,OAAjB,IAA0BE,MAA1B;AADK,OAAd;AAGD,K;;UAEDE,a,GAAgB,UAAAC,IAAI,EAAI;AACtB,YAAKF,QAAL,CAAc;AACZJ,QAAAA,KAAK,+BAAM,MAAKD,KAAL,CAAWC,KAAjB,IAAwBM,IAAxB;AADO,OAAd;AAGD,K;;;;;;;wCAEmB;AAAA;;AAClB;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,CAACC,KAAK,WAAIb,GAAJ,YAAN,EAAwBa,KAAK,WAAIb,GAAJ,cAA7B,CAAZ,EACGc,IADH,CACQ,gBAA4B;AAAA;AAAA,YAA1BC,QAA0B;AAAA,YAAhBC,UAAgB;;AAChC,YAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB,OAAOF,QAAQ,CAACG,IAAT,GAAgBJ,IAAhB,CAAqB,UAAAK,CAAC;AAAA,iBAAIR,OAAO,CAACS,MAAR,CAAeD,CAAf,CAAJ;AAAA,SAAtB,CAAP;AAClB,YAAI,CAACH,UAAU,CAACC,EAAhB,EACE,OAAOD,UAAU,CAACE,IAAX,GAAkBJ,IAAlB,CAAuB,UAAAK,CAAC;AAAA,iBAAIR,OAAO,CAACS,MAAR,CAAeD,CAAf,CAAJ;AAAA,SAAxB,CAAP;AACF,eAAOR,OAAO,CAACC,GAAR,CAAY,CAACG,QAAQ,CAACG,IAAT,EAAD,EAAkBF,UAAU,CAACE,IAAX,EAAlB,CAAZ,CAAP;AACD,OANH,EAOGJ,IAPH,CAOQ,iBAAsB;AAAA;AAAA,YAApBV,KAAoB;AAAA,YAAbC,OAAa;;AAC1BA,QAAAA,OAAO,CAACgB,GAAR,CAAY,UAAAd,MAAM,EAAI;AACpB,iBAAO,MAAI,CAACD,eAAL,CAAqBC,MAArB,CAAP;AACD,SAFD;AAGAH,QAAAA,KAAK,CAACiB,GAAN,CAAU,UAAAX,IAAI,EAAI;AAChB,iBAAO,MAAI,CAACD,aAAL,CAAmBC,IAAnB,CAAP;AACD,SAFD;AAGD,OAdH,EAeGY,KAfH,CAeS,UAAAC,KAAK,EAAI;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc;AAAEA,UAAAA,KAAK,EAALA;AAAF,SAAd;AACD,OAjBH;AAkBD;;;sCAEiB;AAAA;;AAAA,wBACW,KAAKpB,KADhB;AAAA,UACRC,KADQ,eACRA,KADQ;AAAA,UACDC,OADC,eACDA,OADC;AAEhB,0BACE,0CACG,CAAC,GAAD,EAAM,mBAAN,EAA2BgB,GAA3B,CAA+B,UAAAI,IAAI;AAAA,4BAClC,oBAAC,KAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,GAAG,EAAEA,IAFP;AAGE,UAAA,IAAI,EAAEA,IAHR;AAIE,UAAA,MAAM,EAAE,gBAAAC,UAAU;AAAA,gCAChB,oBAAC,WAAD;AACE,cAAA,OAAO,EAAErB,OADX;AAEE,cAAA,KAAK,EAAED;AAFT,eAGMsB,UAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADgB;AAAA,WAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADkC;AAAA,OAAnC,CADH,eAeE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,eADP;AAEE,QAAA,MAAM,EAAE,gBAAAA,UAAU,EAAI;AAAA,cACZC,MADY,GACDD,UAAU,CAACE,KAAX,CAAiBC,MADhB,CACZF,MADY;AAEpB,cAAMjB,IAAI,GAAGb,QAAQ,CAACO,KAAD,EAAQuB,MAAR,CAAR,IAA2B,EAAxC;AACA,cAAMpB,MAAM,GAAGT,UAAU,CAACO,OAAD,EAAUK,IAAI,CAACoB,QAAf,CAAzB;AACA,8BACE,oBAAC,WAAD,oBACMJ,UADN;AAEE,YAAA,MAAM,EAAEnB,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAMD,SAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,eA6BE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,SAAS,EAAEjB,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7BF,eAiCE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,SAAS,EAAEA,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjCF,CADF;AAwCD;;;uCAEkB;AAAA;;AAAA,yBACU,KAAKa,KADf;AAAA,UACTC,KADS,gBACTA,KADS;AAAA,UACFC,OADE,gBACFA,OADE;AAEjB,0BACE,0CACG,CAAC,GAAD,EAAM,mBAAN,EAA2BgB,GAA3B,CAA+B,UAAAI,IAAI;AAAA,4BAClC,oBAAC,KAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,GAAG,EAAEA,IAFP;AAGE,UAAA,IAAI,EAAEA,IAHR;AAIE,UAAA,MAAM,EAAE,gBAAAC,UAAU,EAAI;AAAA,gBACZI,QADY,GACCJ,UAAU,CAACE,KAAX,CAAiBC,MADlB,CACZC,QADY;AAEpB,gBAAMC,cAAc,GAAGnC,iBAAiB,CAACQ,KAAD,EAAQ0B,QAAR,CAAxC;AACA,gCACE,oBAAC,YAAD,oBACMJ,UADN;AAEE,cAAA,KAAK,EAAEK,cAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;AAMD,WAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADkC;AAAA,OAAnC,CADH,eAkBE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,eADP;AAEE,QAAA,MAAM,EAAE,gBAAAL,UAAU,EAAI;AAAA,cACZC,MADY,GACDD,UAAU,CAACE,KAAX,CAAiBC,MADhB,CACZF,MADY;AAEpB,cAAMjB,IAAI,GAAGb,QAAQ,CAACO,KAAD,EAAQuB,MAAR,CAArB;AACA,8BACE,oBAAC,YAAD,oBACMD,UADN;AAEE,YAAA,IAAI,EAAEhB,IAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAMD,SAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBF,eA+BE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,SAAS,EAAEjB,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/BF,eAmCE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,MAAM,EAAE,gBAAAiC,UAAU,EAAI;AACpB,8BACE,oBAAC,OAAD,oBACMA,UADN;AAEE,YAAA,OAAO,EAAErB,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAMD,SATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnCF,CADF;AAiDD;;;6BAEQ;AACP,0BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAK2B,eAAL,EADH,CADF,eAIE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEG,GAFH,eAGE,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF,CAJF,eAWE;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,gBAAL,EADH,CAXF,CADF;AAiBD;;;;EA5JehD,S;;AA+JlB,eAAeiB,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport NoteListNav from '../NoteListNav/NoteListNav'\nimport NotePageNav from '../NotePageNav/NotePageNav'\nimport NoteListMain from '../NoteListMain/NoteListMain'\nimport NotePageMain from '../NotePageMain/NotePageMain'\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport dummyStore from '../dummy-store'\nimport { getNotesForFolder, findNote, findFolder } from '../notes-helpers'\nimport './App.css'\nimport Config from '../config'\nconst API = Config.API_ENDPOINT;\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: [],\n  };\n\n  handleAddFolder = folder => {\n    this.setState({\n      folders: [...this.state.folders, folder]\n    });\n  };\n\n  handleAddNote = note => {\n    this.setState({\n      notes: [...this.state.notes, note]\n    });\n  };\n\n  componentDidMount() {\n    // fake date loading from API call\n    //setTimeout(() => this.setState(dummyStore), 600)\n    Promise.all([fetch(`${API}/notes`), fetch(`${API}/folders`)])\n      .then(([notesRes, foldersRes]) => {\n        if (!notesRes.ok) return notesRes.json().then(e => Promise.reject(e));\n        if (!foldersRes.ok)\n          return foldersRes.json().then(e => Promise.reject(e));\n        return Promise.all([notesRes.json(), foldersRes.json()]);\n      })\n      .then(([notes, folders]) => {\n        folders.map(folder => {\n          return this.handleAddFolder(folder);\n        });\n        notes.map(note => {\n          return this.handleAddNote(note);\n        });\n      })\n      .catch(error => {\n        console.error({ error });\n      });\n  }\n\n  renderNavRoutes() {\n    const { notes, folders } = this.state\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            render={routeProps =>\n              <NoteListNav\n                folders={folders}\n                notes={notes}\n                {...routeProps}\n              />\n            }\n          />\n        )}\n        <Route\n          path='/note/:noteId'\n          render={routeProps => {\n            const { noteId } = routeProps.match.params\n            const note = findNote(notes, noteId) || {}\n            const folder = findFolder(folders, note.folderId)\n            return (\n              <NotePageNav\n                {...routeProps}\n                folder={folder}\n              />\n            )\n          }}\n        />\n        <Route\n          path='/add-folder'\n          component={NotePageNav}\n        />\n        <Route\n          path='/add-note'\n          component={NotePageNav}\n        />\n      </>\n    )\n  }\n\n  renderMainRoutes() {\n    const { notes, folders } = this.state\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            render={routeProps => {\n              const { folderId } = routeProps.match.params\n              const notesForFolder = getNotesForFolder(notes, folderId)\n              return (\n                <NoteListMain\n                  {...routeProps}\n                  notes={notesForFolder}\n                />\n              )\n            }}\n          />\n        )}\n        <Route\n          path='/note/:noteId'\n          render={routeProps => {\n            const { noteId } = routeProps.match.params\n            const note = findNote(notes, noteId)\n            return (\n              <NotePageMain\n                {...routeProps}\n                note={note}\n              />\n            )\n          }}\n        />\n        <Route\n          path='/add-folder'\n          component={AddFolder}\n        />\n        <Route\n          path='/add-note'\n          render={routeProps => {\n            return (\n              <AddNote\n                {...routeProps}\n                folders={folders}\n              />\n            )\n          }}\n        />\n      </>\n    )\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <nav className='App__nav'>\n          {this.renderNavRoutes()}\n        </nav>\n        <header className='App__header'>\n          <h1>\n            <Link to='/'>Noteful</Link>\n            {' '}\n            <FontAwesomeIcon icon='check-double' />\n          </h1>\n        </header>\n        <main className='App__main'>\n          {this.renderMainRoutes()}\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}