{"ast":null,"code":"import _defineProperty from \"/Users/Mustaqeem/Documents/ReactNoteful/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Mustaqeem/Documents/ReactNoteful/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Mustaqeem/Documents/ReactNoteful/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Mustaqeem/Documents/ReactNoteful/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Mustaqeem/Documents/ReactNoteful/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Mustaqeem/Documents/ReactNoteful/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Mustaqeem/Documents/ReactNoteful/src/AddNote/AddNote.js\";\nimport React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport './AddNote.css';\nimport conf from \"../config\";\n\nvar AddNote = /*#__PURE__*/function (_Component) {\n  _inherits(AddNote, _Component);\n\n  function AddNote() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddNote);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddNote)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      noteName: \"\",\n      folderId: \"\",\n      content: \"\"\n    };\n\n    _this.handleInput = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var data = JSON.stringify({\n        note_name: _this.state.noteName,\n        folder_id: _this.state.folderId,\n        content: _this.state.content\n      });\n      fetch(conf.API_ENDPOINT + \"/notes\", {\n        method: \"POST\",\n        body: data,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        if (response) {\n          alert(\"Note Added!\" + response);\n        }\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddNote, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var folders = this.props.folders;\n      return /*#__PURE__*/React.createElement(\"section\", {\n        className: \"AddNote\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, \"Create a note\"), /*#__PURE__*/React.createElement(NotefulForm, {\n        handleSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"note-name-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"noteName\",\n        name: \"noteName\",\n        onChange: function onChange(e) {\n          return _this2.handleInput(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"note-content-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, \"Content\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        id: \"content\",\n        name: \"content\",\n        onChange: function onChange(e) {\n          return _this2.handleInput(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"note-folder-select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, \"Folder\"), /*#__PURE__*/React.createElement(\"select\", {\n        id: \"folderId\",\n        name: \"folderId\",\n        onChange: function onChange(e) {\n          return _this2.handleInput(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, \"...\"), folders.map(function (folder) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: folder.id,\n          value: folder.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }\n        }, folder.folder_name);\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, \"Add note\"))));\n    }\n  }]);\n\n  return AddNote;\n}(Component);\n\nAddNote.defaultProps = {\n  folders: []\n};\nexport { AddNote as default };","map":{"version":3,"sources":["/Users/Mustaqeem/Documents/ReactNoteful/src/AddNote/AddNote.js"],"names":["React","Component","NotefulForm","conf","AddNote","state","noteName","folderId","content","handleInput","e","target","name","value","setState","handleSubmit","preventDefault","data","JSON","stringify","note_name","folder_id","fetch","API_ENDPOINT","method","body","headers","then","response","json","alert","catch","error","console","log","folders","props","map","folder","id","folder_name","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport './AddNote.css'\nimport conf from \"../config\";\n\nexport default class AddNote extends Component {\n  static defaultProps = {\n    folders: [],\n  }\n\n  state = {\n   noteName: \"\",\n   folderId:  \"\",\n   content: \"\"\n  }\n  handleInput = (e) => {\n    const{ name, value} = e.target;\n    this.setState({\n      [name]: value    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const data = JSON.stringify(\n      {\n        note_name : this.state.noteName, \n        folder_id : this.state.folderId,\n        content: this.state.content\n      });\n    fetch(conf.API_ENDPOINT+\"/notes\", {\n      method: \"POST\",\n      body: data,\n      headers: {\"Content-Type\": \"application/json\"}\n    })\n    .then(response=>response.json())\n    .then(response=>\n      {\n        if(response)\n        {\n          alert(\"Note Added!\" + response)\n        }\n      })\n    .catch(error=>console.log(error));\n  }\n  \n\n  render() {\n    const { folders } = this.props\n    return (\n      <section className='AddNote'>\n        <h2>Create a note</h2>\n        <NotefulForm handleSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='note-name-input'>\n              Name\n            </label>\n            <input type='text' id='noteName' name='noteName' onChange={(e) => this.handleInput(e)} />\n          </div>\n          <div className='field'>\n            <label htmlFor='note-content-input'>\n              Content\n            </label>\n            <textarea id='content' name=\"content\" onChange={(e) => this.handleInput(e)} />\n          </div>\n          <div className='field'>\n            <label htmlFor='note-folder-select'>\n              Folder\n            </label>\n            <select id='folderId' name='folderId' onChange={(e) => this.handleInput(e)}>\n              <option value={null}>...</option>\n              {folders.map(folder =>\n                <option key={folder.id} value={folder.id}>\n                  {folder.folder_name}\n                </option>\n              )}\n            </select>\n          </div>\n          <div className='buttons'>\n            <button type='submit'>\n              Add note\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}